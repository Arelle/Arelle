name: Run Xbrl Conformance Suites
on: pull_request_target

jobs:
  find-tests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-test-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - id: build-test-matrix
        run: |
          printf '::set-output name=matrix::'
          find tests/integration_tests -name 'test_*.py' -not -name test_efm_conformance_suite.py | jq -Rsc 'split("\n") | map(select(length > 0) | capture("(?<path>.*/test_(?<name>.*)[.]py)"))'

  run-conformance-suite:
    name: ${{ matrix.test.name }}
    needs: find-tests
    permissions: read-all
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        test: ${{ fromJson(needs.find-tests.outputs.matrix) }}
    environment: integration-tests
    steps:
      - name: Download XBRL validation config
        run: |
          mkdir -p "$XDG_CONFIG_HOME/arelle/cache"
          curl -L "${{ secrets.XBRL_VALIDATION_CONFIG_URL }}" -o config.zip
          unzip -d "$XDG_CONFIG_HOME/arelle/cache" config.zip 'http/*' 'https/*'
          rm config.zip
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
      - name: Download from S3
        run: aws s3 sync s3://arelle tests/resources
      - name: Run integration tests with pytest
        env:
          CONFORMANCE_SUITES_TEST_MODE: OFFLINE
        run: pytest -s --disable-warnings ${{ matrix.test.path }}
