name: Build for Linux

on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      edgar_renderer_ref:
        description: 'Arelle/EdgarRenderer branch, tag or SHA to checkout (blank for default)'
        required: false
        type: string
      ixbrl_viewer_ref:
        description: 'Workiva/ixbrl-viewer branch, tag or SHA to checkout (blank for default)'
        required: false
        type: string
      openssl_version:
        default: 1.1.1q
        description: 'OpenSSL version to use'
        required: true
        type: string
      node_version:
        default: lts/*
        description: 'Node.js version to use'
        required: true
        type: string
      python_version:
        default: 3.10.8
        description: 'Python version to use'
        required: true
        type: string
      tcltk_version:
        default: 8.6.12
        description: 'tcl/tk version to use'
        required: true
        type: string
      xule_ref:
        description: 'xbrlus/xule branch, tag or SHA to checkout (blank for default)'
        required: false
        type: string

jobs:
  build-linux:
    environment: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [
          redhat,
          ubuntu
        ]

    steps:
      - name: Checkout arelle
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      - name: Checkout EdgarRenderer
        uses: actions/checkout@v3.1.0
        with:
          repository: Arelle/EdgarRenderer
          path: arelle/plugin/EdgarRenderer
          ref: ${{ inputs.edgar_renderer_ref }}
      - name: Cleanup EdgarRenderer
        run: rm -rf arelle/plugin/EdgarRenderer/.git
      - name: Checkout XULE
        uses: actions/checkout@v3.1.0
        with:
          repository: xbrlus/xule
          path: xule
          ref: ${{ inputs.xule_ref }}
      - name: Move XULE plugins
        run: |
          mv xule/plugin/validate/* arelle/plugin/validate/
          rm -rf xule/plugin/validate
          mv xule/plugin/* arelle/plugin/
      - name: Cleanup XULE
        run: rm -rf xule
      - name: Checkout ixbrl-viewer
        uses: actions/checkout@v3.1.0
        with:
          repository: Workiva/ixbrl-viewer
          path: ixbrl-viewer
          ref: ${{ inputs.ixbrl_viewer_ref }}
      - name: Set up Node JS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ inputs.node_version }}
      - name: Build ixbrl-viewer
        working-directory: ixbrl-viewer
        run: |
          npm install
          make prod
      - name: Move ixbrl-viewer plugin
        run: mv ixbrl-viewer/iXBRLViewerPlugin arelle/plugin/
      - name: Cleanup ixbrl-viewer
        run: rm -rf ixbrl-viewer
      - name: Docker registry login
        uses: docker/login-action@v2.1.0
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}
      - name: Docker setup buildx
        uses: docker/setup-buildx-action@v2.1.0
      - name: Docker build
        uses: docker/build-push-action@v3.2.0
        with:
          build-args: |
            "OPENSSL_VERSION=${{ inputs.openssl_version }}"
            "PYTHON_VERSION=${{ inputs.python_version }}"
            "TCLTK_VERSION=${{ inputs.tcltk_version }}"
          context: .
          file: docker/${{ matrix.distro }}.Dockerfile
          load: true
          secrets: |
            "redhat_username=${{ secrets.REDHAT_USERNAME }}"
            "redhat_password=${{ secrets.REDHAT_PASSWORD }}"
          tags: arelle:arelle
      - name: Docker copy build artifact
        run: |
          docker create --name arelle arelle:arelle
          docker cp arelle:/build/dist/ dist/
          docker rm -v arelle
      - name: Upload build artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ matrix.distro }} distribution
          path: dist/*.tgz
