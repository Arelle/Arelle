<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2007 XBRL International. All Rights Reserved. -->
<?xml-stylesheet type="text/xsl" href="../../../infrastructure/test.xsl"?>
<testcase
  xmlns="http://xbrl.org/2008/conformance"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xbrl.org/2008/conformance ../../../infrastructure/test.xsd"
  xmlns:xbrlfe="http://xbrl.org/2008/formula/error"
  xmlns:binding="http://xbrl.org/2008/binding/errors"
  xmlns:label="http://xbrl.org/2008/label/error"
  xmlns:reference="http://xbrl.org/2008/reference/error"  
  >
  <creator>
    <name>Herm Fischer</name>
    <email>fischer@markv.com</email>
  </creator>
  <number>21241</number>
  <name>Fact Variable static analysis</name>
  <description>
    Tests of fact variable static analysis
  </description>
  <reference specification="VARIABLES" id="sec-xpath-usage"/>
  <reference specification="VARIABLES" id="sec-fact-variables"/>

  <variation id="V-01">
    <name>Static analysis acts as if parentheses wrap XPath expression terms</name>
    <description>Tests that the XPath2 generated by filters fits in a parenthesized expression. (Spec reference: "If a fact variable is using a filter rather than its complement, then the XPath expression implied by that filter is surrounded by round brackets (, and ) before inclusion in the XPath expression implied by the fact variable")  The resulting XPath would be "facts-in-instance()[(true()))]", which is an XPath2 static syntax error.</description>
    <reference specification="VARIABLES" id="sec-fact-variables"/>
    <data>
      <schema>21241-factVar-tests.xsd</schema>
      <linkbase>21241-miswrapParentheses-formula.xml</linkbase>
      <instance readMeFirst="true">21241-miswrapParentheses-instance.xml</instance>
    </data>
    <result>
      <error xmlns:err="http://www.w3.org/2005/xqt-errors">err:XPST0003</error>
    </result>
  </variation>  

 </testcase>





