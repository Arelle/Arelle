<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2007 XBRL International. All Rights Reserved. -->
<?xml-stylesheet type="text/xsl" href="../../../infrastructure/test.xsl"?>
<testcase
  xmlns="http://xbrl.org/2008/conformance"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xbrl.org/2008/conformance ../../../infrastructure/test.xsd"
  xmlns:xbrlfe="http://xbrl.org/2008/formula/error"
  xmlns:binding="http://xbrl.org/2008/binding/errors"
  xmlns:label="http://xbrl.org/2008/label/error"
  xmlns:reference="http://xbrl.org/2008/reference/error"  
  >
  <creator>
    <name>Herm Fischer</name>
    <email>fischer@markv.com</email>
  </creator>
  <number>46220</number>
  <name>Dimensional implicit filter test</name>
  <description>
    Tests of dimensional implict filter processing.  The strategy is to
    provide a match source variable, designated by id, and conditions to
    test each matchable aspect by separate variation.  In each case the
    match variable has a dependent interloper which is covered in the
    matchable aspect (to ensure that non-preceding variables are sought
    for uncovered aspects), and a set of potential match target suiters.
    Each test has only one uncovered aspect for implicit match selection.
    The result has the single match target.
  </description>
  <reference specification="IMPLICIT-FILTER" id="sec-implicit-filters"/>
  <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
  <reference specification="VARIABLES" id="sec-aspect-model"/>
  <reference specification="VARIABLES" id="sec-implicit-filters"/>

  <variation id="V-01">
    <name>Match uncovered concept aspect</name>
    <description>
       Match source is the first c:f of instance document, only concept
       aspect is uncovered, 3rd fact var must seek uncovered concept of
       first fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-conceptUncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-conceptUncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-conceptUncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-02">
    <name>Match uncovered tuple aspect</name>
    <description>
       Match source is the c:z of instance document, only tuple
       aspect is uncovered, 3rd fact var must seek uncovered tuple aspect of
       first (c:z) fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-tupleUncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-tupleUncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-tupleUncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-03">
    <name>Match uncovered entity identifier aspect</name>
    <description>
       Match source is the c:z of instance document, only entity
       aspect is uncovered, 3rd fact var must seek uncovered entity of
       first (c:z) fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-entityUncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-entityUncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-entityUncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-04">
    <name>Match uncovered period aspect</name>
    <description>
       Match source is the c:z of instance document, only period
       aspect is uncovered, 3rd fact var must seek uncovered period of
       first (c:z) fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-periodUncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-periodUncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-periodUncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-05">
    <name>Match uncovered non-XDT segment aspect</name>
    <description>
       Match source is the c:z of instance document, only segment
       aspect is uncovered, 3rd fact var must seek uncovered segment of
       first (c:z) fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-nonXDTsegmentUncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-nonXDTsegmentUncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-nonXDTsegmentUncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-06">
    <name>Match uncovered non-XDT scenario aspect</name>
    <description>
       Match source is the c:z of instance document, only scenario
       aspect is uncovered, 3rd fact var must seek uncovered scenario of
       first (c:z) fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-nonXDTscenarioUncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-nonXDTscenarioUncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-nonXDTscenarioUncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-07">
    <name>Match uncovered ExplDim1 segment aspect</name>
    <description>
       Match source is the c:z of instance document, only segment
       aspect is uncovered, 3rd fact var must seek uncovered segment of
       first (c:z) fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-segmentExplDim1Uncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-segmentExplDim1Uncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-segmentExplDim1Uncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-08">
    <name>Match uncovered TypedDim1 scenario aspect</name>
    <description>
       Match source is the c:z of instance document, only scenario
       aspect is uncovered, 3rd fact var must seek uncovered scenario of
       first (c:z) fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-scenarioTypedDim1Uncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-scenarioTypedDim1Uncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-scenarioTypedDim1Uncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-09">
    <name>Match uncovered unit aspect</name>
    <description>
       Match source is the c:z of instance document, only unit
       aspect is uncovered, 3rd fact var must seek uncovered unit of
       first (c:z) fact variable.
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-unitUncovered-formula.xml</linkbase>
      <instance readMeFirst="true">46220-unitUncovered-instance.xml</instance>
    </data>
    <result>
      <instance>46220-unitUncovered-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-10">
    <name>Dimensional aggregation in two dimensions, one of two implicitly filtered (Pharmaceutical Example of 31430 test case)</name>
    <description>
      (See 31430 test case for further explanation.  Only result file
      output is examined here, not consistency assertion.)
      The example shows aggregation over the product dimension by
      use of the product dimension members tree, and over region
      dimenson by region dimension members tree.  Implicit filtering
      for the non-aggregated dimension is required, otherwise a cross
      product of excessive results will occur.  For each product
      dimension, the child members are aggregated.  
      See powerpoint enclosed for further details.
      This evaluation determines a dimension filter member by the function
      xfi:fact-explicit-dimension-value of the aggregate
      variable.
    </description>
    <reference specification="FORMULA" id="sec-formula"/>
    <data>
      <instance readMeFirst="true">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Sales-instance.xml</instance> 
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/formulae.xml</linkbase>
      <schema readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Company.xsd</schema>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Company-definition.xml</linkbase>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Company-label.xml</linkbase>
      <schema readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Products.xsd</schema>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Products-definition.xml</linkbase>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Products-label.xml</linkbase>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Products-presentation.xml</linkbase>
      <schema readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Sales.xsd</schema>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Sales-label.xml</linkbase>
      <schema readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Regions.xsd</schema>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Regions-definition.xml</linkbase>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Regions-label.xml</linkbase>
      <linkbase readMeFirst="false">../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Regions-presentation.xml</linkbase>
    </data>
    <result>
      <instance>../../30000%20Assertions/31430-ConsistencyAssertion-UseCases-Pharmaceutical/Sales-instance_results.xml</instance>
    </result>
  </variation>

  <variation id="V-11">
    <name>Match uncovered typed dim with 2 implicit matched primary items</name>
    <description>
       This is different from the other variations.  Three primary items in two
       contexts are output (f, g, and h), but also matched against g and h with
       concept name filtering and coverage.  This should produce the same three
       primary items, but added to the corresponding g and h to show that their
       implicit filtering of the primary items matched them up only to their
       typed-dimensional-matches.  If the implicit filtering goofs up there would
       be 24 results (with values 21003, 22003, 23003, 21004, 22004, 23004,
       21005, 22005, 23005, 21006, 22006, and 23006). 
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-scenarioTypedDim1Uncovered-2-formula.xml</linkbase>
      <instance readMeFirst="true">46220-scenarioTypedDim1Uncovered-2-instance.xml</instance>
    </data>
    <result>
      <instance>46220-scenarioTypedDim1Uncovered-2-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-12">
    <name>Match uncovered typed dim with 2 implicit matched primary items, order forced</name>
    <description>
       Same as V-11 but fake general filters added to force dependency, to assure
       that evaluation order fv1 then fv2 then fv3 has same result (as V-11 and V-13)
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-scenarioTypedDim1Uncovered-3-formula.xml</linkbase>
      <instance readMeFirst="true">46220-scenarioTypedDim1Uncovered-3-instance.xml</instance>
    </data>
    <result>
      <instance>46220-scenarioTypedDim1Uncovered-2-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-13">
    <name>Match uncovered typed dim with 2 implicit matched primary items, reverse order forced</name>
    <description>
       Same as V-11 but fake general filters added to force dependency, to assure
       that evaluation order fv1 after fv2 and fv3 has same result (as V-11 and V-12)
    </description>
    <reference specification="IMPLICIT-FILTER" id="sec-dimensional-implicit-filters"/>
    <data>
      <schema>46220-concepts.xsd</schema>
      <linkbase>46220-scenarioTypedDim1Uncovered-4-formula.xml</linkbase>
      <instance readMeFirst="true">46220-scenarioTypedDim1Uncovered-4-instance.xml</instance>
    </data>
    <result>
      <instance>46220-scenarioTypedDim1Uncovered-2-result.xml</instance>
    </result>
  </variation>  

</testcase>






