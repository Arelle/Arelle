<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2007 XBRL International. All Rights Reserved. -->
<?xml-stylesheet type="text/xsl" href="../../../infrastructure/test.xsl"?>
<testcase
  xmlns="http://xbrl.org/2008/conformance"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xbrl.org/2008/conformance ../../../infrastructure/test.xsd"
  xmlns:xbrlfe="http://xbrl.org/2008/formula/error"
  xmlns:binding="http://xbrl.org/2008/binding/errors"
  xmlns:label="http://xbrl.org/2008/label/error"
  xmlns:reference="http://xbrl.org/2008/reference/error"  
  >
  <creator>
    <name>Herm Fischer</name>
    <email>fischer@markv.com</email>
  </creator>
  <number>12060</number>
  <name>OCC rules processing examples</name>
  <description>
    Tests of formula OCC rules processing (not including OCC dimension rules, see 12061 for dimension rules processing tests)
  </description>
  <reference specification="FORMULA" id="sec-occ-rules"/>
  <reference specification="FORMULA" id="sec-default-aspect-rules"/>

  <variation id="V-01">
    <name>Output of source OCC segment</name>
    <description>Tests that the output OCC segment is that of the input.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-source-occ-copy-formula.xml</linkbase>
      <instance readMeFirst="true">12060-source-seg-instance.xml</instance>
    </data>
    <result>
      <instance>12060-source-seg-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-02">
    <name>Output of source OCC scenario</name>
    <description>Tests that the output OCC scenario is that of the input.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-source-occ-copy-formula.xml</linkbase>
      <instance readMeFirst="true">12060-source-scen-instance.xml</instance>
    </data>
    <result>
      <instance>12060-source-scen-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-03">
    <name>Dropping of source OCC segment</name>
    <description>Tests that the output OCC segment drops the input segment.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <reference specification="FORMULA" id="sec-fragment-occ-rules"/>
    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-no-source-seg-formula.xml</linkbase>
      <instance readMeFirst="true">12060-no-source-seg-instance.xml</instance>
    </data>
    <result>
      <instance>12060-no-source-seg-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-04">
    <name>Dropping of source OCC scenario</name>
    <description>Tests that the output OCC segment drops the input scenario.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-no-source-scen-formula.xml</linkbase>
      <instance readMeFirst="true">12060-no-source-scen-instance.xml</instance>
    </data>
    <result>
      <instance>12060-no-source-scen-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-05">
    <name>Augmenting of source OCC segment by fragment</name>
    <description>Tests that the output OCC segment fragment augments the input segment.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <reference specification="FORMULA" id="sec-fragment-occ-rules"/>
    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-source-seg-aug-frag-formula.xml</linkbase>
      <instance readMeFirst="true">12060-source-seg-aug-frag-instance.xml</instance>
    </data>
    <result>
      <instance>12060-source-seg-aug-frag-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-06">
    <name>Augmenting of source OCC scenario by fragment</name>
    <description>Tests that the output OCC scenario fragment augments the input scenario.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <reference specification="FORMULA" id="sec-fragment-occ-rules"/>
    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-source-scen-aug-frag-formula.xml</linkbase>
      <instance readMeFirst="true">12060-source-scen-aug-frag-instance.xml</instance>
    </data>
    <result>
      <instance>12060-source-scen-aug-frag-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-07">
    <name>Replacing of source OCC segment by fragment</name>
    <description>Tests that the output OCC segment fragment replaces the input segment.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <reference specification="FORMULA" id="sec-fragment-occ-rules"/>
    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-source-seg-repl-frag-formula.xml</linkbase>
      <instance readMeFirst="true">12060-source-seg-repl-frag-instance.xml</instance>
    </data>
    <result>
      <instance>12060-source-seg-repl-frag-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-08">
    <name>Replacing of source OCC scenario by fragment</name>
    <description>Tests that the output OCC scenario fragment replaces the input scenario.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <reference specification="FORMULA" id="sec-fragment-occ-rules"/>

    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-source-scen-repl-frag-formula.xml</linkbase>
      <instance readMeFirst="true">12060-source-scen-repl-frag-instance.xml</instance>
    </data>
    <result>
      <instance>12060-source-scen-repl-frag-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-09">
    <name>Replacing of source OCC segment by nodes</name>
    <description>
       Tests that the output OCC segment nodes replaces the input segment.  Note: As
       fn:doc() is used here to load an xml document which does not have a schema,
       and as schema validation is required because the instance document is schema-
       validated, Michael Kay recommends the use of "lax" attribute on validation
       so that doc() will succeed despite schema-less instance.  In this case
       nodes are not required to be typed as their values are not consulted by
       anything invoking atomicity processes.
    </description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <reference specification="FORMULA" id="sec-xpath-occ-rules"/>

    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-source-seg-repl-node-formula.xml</linkbase>
      <instance readMeFirst="true">12060-source-seg-repl-node-instance.xml</instance>
    </data>
    <result>
      <instance>12060-source-seg-repl-node-result.xml</instance>
    </result>
  </variation>  

  <variation id="V-10">
    <name>Replacing of source OCC scenario by nodes</name>
    <description>Tests that the output OCC scenario nodes replaces the input scenario.</description>
    <reference specification="FORMULA" id="sec-occ-rules"/>
    <reference specification="FORMULA" id="sec-xpath-occ-rules"/>
    <data>
      <schema>12060-OCC-tests.xsd</schema>
      <linkbase>12060-source-scen-repl-node-formula.xml</linkbase>
      <instance readMeFirst="true">12060-source-scen-repl-node-instance.xml</instance>
    </data>
    <result>
      <instance>12060-source-scen-repl-node-result.xml</instance>
    </result>
  </variation>  


</testcase>




